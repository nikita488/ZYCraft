buildscript {
    repositories {
        maven { url = "https://maven.minecraftforge.net" }
        maven { url = "https://repo.spongepowered.org/maven" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "4.1.+", changing: true
        classpath group: "org.spongepowered", name: "mixingradle", version: "0.7-SNAPSHOT"
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.spongepowered.mixin"

version = "${mc_version}-${mod_version}"
group = "nikita488.zycraft"
archivesBaseName = "ZYCraft"

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: "snapshot", version: "20210309-1.16.5"
    accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

    runs {
        client {
            workingDirectory project.file("run")
            arg "-mixin.config=mixins.zycraft.json"
            property 'mixin.env.disableRefMap', 'true'
            mods { zycraft { source sourceSets.main } }
        }

        server {
            workingDirectory project.file("run")
            mods { zycraft { source sourceSets.main } }
        }

        data {
            workingDirectory project.file("run")
            args "--mod", "zycraft", "--all", "--output", file("src/generated/resources/"), "--existing", file("src/main/resources/")
            mods { zycraft { source sourceSets.main } }
        }
    }
}

repositories {
    mavenLocal()
    maven { url "https://maven.tterrag.com" }
    maven { url "https://www.cursemaven.com" }
    maven { url "http://dvs1.progwml6.com/files/maven" }
    maven { url "https://maven.tehnut.info" }
}

configurations {
    shade
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    def registrate = "com.tterrag.registrate:Registrate:MC${mc_version}-${registrate_version}"
    implementation fg.deobf(registrate)
    shade registrate

    implementation fg.deobf("team.chisel.ctm:CTM:MC1.16.1-${ctm_version}")
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")
    compileOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-1.16:1.16-${top_version}:api")
    runtimeOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-1.16:1.16-${top_version}")
    compileOnly fg.deobf("mcp.mobius.waila:Hwyla:${hwyla_version}:api")
    runtimeOnly fg.deobf("mcp.mobius.waila:Hwyla:${hwyla_version}")

    //runtimeOnly fg.deobf("curse.maven:mekanism-268560:3183270")
    runtimeOnly fg.deobf("curse.maven:storage-drawers-223852:3180569")

    annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"
}

jar {
    archiveClassifier.set("slim")

    manifest {
        attributes([
                "Specification-Title": "zycraft",
                "Specification-Vendor": "nikita488",
                "Specification-Version": "1.0",
                "Implementation-Title": "ZYCraft",
                "Implementation-Version": "${mod_version}",
                "Implementation-Vendor": "nikita488",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConnector": "nikita488.zycraft.mixin.ZYMixinConnector"
        ])
    }
}

sourceSets.main {
    ext.refMap = "mixins.zycraft.refmap.json"
}

sourceSets.main.resources {
    srcDir "src/generated/resources"
}

processResources { task ->
    exclude ".cache"
    exclude "**/*.psd"

    from(sourceSets.main.resources.srcDirs) { spec ->
        spec.include 'META-INF/mods.toml'
        task.doFirst {
            spec.expand 'version': mod_version,
                    'mc_version': mc_version,
                    'forge_version': min_forge_version,
                    'loader_version': loader_version
        }
    }
}

shadowJar {
    archiveClassifier.set("")
    configurations = [project.configurations.shade]
    relocate "com.tterrag.registrate", "nikita488.zycraft.repack.registrate"
}

reobf {
    shadowJar {}
}

task apiJar(type: Jar) {
    archiveClassifier.set("api")
    from sourceSets.main.allSource
    from sourceSets.main.output
    include "nikita488/zycraft/api/**"
}

build.dependsOn shadowJar
build.dependsOn reobfShadowJar

tasks.curseforge.enabled = project.hasProperty("api_key")

curseforge {
    if (project.hasProperty("api_key")) {
        apiKey = project.api_key
    }

    project {
        id = "${project_id}"
        changelog = file("CHANGELOG.md")
        changelogType = "markdown"
        releaseType = project.hasProperty("release_type") ? project.release_type : "beta"
        mainArtifact(shadowJar) {
            displayName = "ZYCraft ${mod_version}"
        }
        addArtifact apiJar
        relations {
            requiredDependency "ctm"
        }
    }
}
